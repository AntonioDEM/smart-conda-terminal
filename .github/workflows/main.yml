name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish:
        description: "Publish to VS Marketplace"
        type: boolean
        required: true
        default: true

jobs:
  package:
    runs-on: ubuntu-latest
    outputs:
      packageName: ${{ steps.meta.outputs.packageName }}
      version: ${{ steps.meta.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Compute package metadata
        id: meta
        working-directory: ./vscode-extension
        run: |
          NAME=$(node -e "console.log(require('./package.json').name)")
          VER=$(node -e "console.log(require('./package.json').version)")
          echo "packageName=${NAME}-${VER}.vsix" >> $GITHUB_OUTPUT
          echo "version=${VER}" >> $GITHUB_OUTPUT

      - name: Package VSIX
        working-directory: ./vscode-extension
        run: npx vsce package --out "${{ steps.meta.outputs.packageName }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.meta.outputs.packageName }}
          path: ./vscode-extension/${{ steps.meta.outputs.packageName }}
          if-no-files-found: error

  publishMS:
    runs-on: ubuntu-latest
    needs: package
    if: github.event.inputs.publish == 'true' || github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.package.outputs.packageName }}
          path: .

      - name: Publish to VS Marketplace
        run: npx vsce publish --packagePath ./${{ needs.package.outputs.packageName }} -p "${{ secrets.VSCE_PAT }}"
